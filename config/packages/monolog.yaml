monolog:
    channels:
        - deprecation # Deprecations are logged in the dedicated "deprecation" channel when it exists

when@dev:
    monolog:
        handlers:
            main:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: debug
                channels: ["!event"]
            # uncomment to get logging in your browser
            # you may have to allow bigger header sizes in your Web server configuration
            #firephp:
            #    type: firephp
            #    level: info
            #chromephp:
            #    type: chromephp
            #    level: info
            console:
                type: console
                process_psr_3_messages: false
                channels: ["!event", "!doctrine", "!console"]
            deprecation:
                type: stream
                channels: [ deprecation ]
                path: php://stderr
                formatter: monolog.formatter.json

when@test:
    monolog:
        handlers:
            main:
                type: fingers_crossed
                action_level: error
                handler: nested
                excluded_http_codes: [404, 405]
                channels: ["!event"]
            nested:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: debug

when@prod:
    monolog:
        handlers:
            # Buffer everything until an error occurs, then flush
            main:
                type: fingers_crossed
                action_level: error
                handler: grouped
                excluded_http_codes: [404, 405]
                buffer_size: 50 # Prevent memory leaks

            # Grouped handler: write to file and stderr (for Docker/systemd)
            grouped:
                type: group
                members: [nested, stderr]

            # File log (ensure var/log is writable by PHP user)
            nested:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: debug
                formatter: monolog.formatter.json

            # Fallback to stderr so 500s are visible even if file is not writable
            stderr:
                type: stream
                path: "php://stderr"
                level: error
                formatter: monolog.formatter.json
            
            # Additionally, emit errors immediately to stderr (not buffered)
            immediate_stderr:
                type: stream
                path: "php://stderr"
                level: error
                formatter: monolog.formatter.json
                bubble: false
            console:
                type: console
                process_psr_3_messages: false
                channels: ["!event", "!doctrine"]
