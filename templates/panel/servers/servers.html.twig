{% extends '@EasyAdmin/page/content.html.twig' %}

{% block content_title %}{{ 'pteroca.servers.title'|trans }}{% endblock %}

{% block page_actions %}
    <a class="btn btn-secondary" href="{{ path('panel') }}">
        {{ 'pteroca.system.back'|trans }}
    </a>
{% endblock %}

{% block main %}
    <div class="container mt-4">
        {% if servers|length > 0 %}
            {% set row = 1 %}
            {% for server in servers %}
                {% if row == 1 %}
                    <div class="row">
                {% endif %}
                <div class="col-md-4 mb-4">
                    {% include 'panel/servers/components/server.html.twig' %}
                </div>
                {% if row % 3 == 0 %}
                    </div>
                {% endif %}
                {% set row = row + 1 %}
            {% endfor %}
        {% else %}
            <div class="row">
                <div class="col-md-12">
                    {% include 'panel/servers/components/alert.html.twig' %}
                </div>
            </div>
        {% endif %}
    </div>
{% endblock %}

{% block body_javascript %}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const cards = document.querySelectorAll('.card[data-server-id]');

            cards.forEach(card => {
                const serverId = card.getAttribute('data-server-id'),
                    endpointUrl = '{{ path('panel') }}/api/server/' + serverId + '/details'

                fetch(endpointUrl)
                    .then(response => response.json())
                    .then(data => {
                        updateCardElements(card, data);
                    })
                    .catch(error => console.error('Error fetching server details:', error));
            });

            function updateCardElements(card, data, prefix = '') {
                for (const [key, value] of Object.entries(data)) {
                    const dataKey = prefix ? `${prefix}-${key}` : key;
                    if (typeof value === 'object' && value !== null) {
                        updateCardElements(card, value, dataKey);
                    } else {
                        const element = card.querySelector(`[data-${dataKey}]`);
                        if (element) {
                            if (element.hasAttribute('data-unit')) {
                                element.textContent = `${value} ${element.getAttribute('data-unit')}`;
                            } else {
                                element.textContent = value;
                            }
                            element.classList.remove('placeholder');
                        }
                    }
                }
            }
        });

    </script>
{% endblock %}
